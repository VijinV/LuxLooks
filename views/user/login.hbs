<section style="height: 69%">
    
    
   
 <script>
    // Get form elements
    const form = document.querySelector('form');
    const nameInput = form.querySelector('input[name="name"]');
    const mobileInput = form.querySelector('input[name="mobile"]');
    const emailInput = form.querySelector('input[name="email"]');
    const passwordInput = form.querySelector('input[name="password"]');
    const cPasswordInput = form.querySelector('input[name="c-password"]');
    const submitBtn = form.querySelector('button[type="submit"]');

    // Add event listener to form submission
    form.addEventListener('submit', (event) => {
        // Prevent default form submission
        event.preventDefault();

        // Validate name input
        if (nameInput.value === '') {
            nameInput.nextElementSibling.textContent = 'Name is required';
            nameInput.focus();
            return false;
        } else {
            nameInput.nextElementSibling.textContent = '';
        }

        // Validate mobile input
        if (mobileInput.value === '') {
            mobileInput.nextElementSibling.textContent = 'Phone number is required';
            mobileInput.focus();
            return false;
        } else {
            mobileInput.nextElementSibling.textContent = '';
        }

        // Validate email input
        if (emailInput.value === '') {
            emailInput.nextElementSibling.textContent = 'Email is required';
            emailInput.focus();
            return false;
        } else if (!isValidEmail(emailInput.value)) {
            emailInput.nextElementSibling.textContent = 'Please enter a valid email';
            emailInput.focus();
            return false;
        } else {
            emailInput.nextElementSibling.textContent = '';
        }

        // Validate password input
        if (passwordInput.value === '') {
            passwordInput.nextElementSibling.textContent = 'Password is required';
            passwordInput.focus();
            return false;
        } else if (passwordInput.value.length < 8) {
            passwordInput.nextElementSibling.textContent = 'Password must be at least 8 characters long';
            passwordInput.focus();
            return false;
        } else {
            passwordInput.nextElementSibling.textContent = '';
        }

        // Validate confirm password input
        if (cPasswordInput.value === '') {
            cPasswordInput.nextElementSibling.textContent = 'Confirm password is required';
            cPasswordInput.focus();
            return false;
        } else if (cPasswordInput.value !== passwordInput.value) {
            cPasswordInput.nextElementSibling.textContent = 'Passwords do not match';
            cPasswordInput.focus();
            return false;
        } else {
            cPasswordInput.nextElementSibling.textContent = '';
        }

        // If all inputs are valid, submit the form
        form.submit();
    });

    // Helper function to validate email
    function isValidEmail(email) {
        const re = /\S+@\S+\.\S+/;
        return re.test(email);
    }
</script>

<script>
    // Get form elements
    const form = document.querySelector('#form');
    const emailInput = form.querySelector('input[name="email"]');
    const passwordInput = form.querySelector('input[name="password"]');
    const submitBtn = form.querySelector('button[type="submit"]');

    // Add event listener to form submission
    
const submitForm(){


// Validate email input
        if (emailInput.value === '') {
            emailInput.nextElementSibling.textContent = 'Email is required';
            emailInput.focus();
            return false;
        } else if (!isValidEmail(emailInput.value)) {
            emailInput.nextElementSibling.textContent = 'Please enter a valid email';
            emailInput.focus();
            return false;
        } else {
            emailInput.nextElementSibling.textContent = '';
        }

        // Validate password input
        if (passwordInput.value === '') {
            passwordInput.nextElementSibling.textContent = 'Password is required';
            passwordInput.focus();
            return false;
        } else {
            passwordInput.nextElementSibling.textContent = '';
        }

        // If all inputs are valid, submit the form
        form.submit();


}
        
 

    // Helper function to validate email
    function isValidEmail(email) {
        const re = /\S+@\S+\.\S+/;
        return re.test(email);
    }

    // Function to validate email input in real-time
    function validateEmail() {
        if (emailInput.value === '') {
            emailInput.nextElementSibling.textContent = 'Email is required';
        } else if (!isValidEmail(emailInput.value)) {
            emailInput.nextElementSibling.textContent = 'Please enter a valid email';
        } else {
            emailInput.nextElementSibling.textContent = '';
        }
    }

    // Function to validate password input in real-time
    function validatePassword() {
        if (passwordInput.value === '') {
            passwordInput.nextElementSibling.textContent = 'Password is required';
        } else {
            passwordInput.nextElementSibling.textContent = '';
        }
    }

    // Function to validate form before submission
    function validateLoginSubmit() {
        if (emailInput.value === '' || !isValidEmail(emailInput.value)) {
            emailInput.nextElementSibling.textContent = 'Please enter a valid email';
            emailInput.focus();
            return false;
        } else {
            emailInput.nextElementSibling.textContent = '';
        }

        if (passwordInput.value === '') {
            passwordInput.nextElementSibling.textContent = 'Password is required';
            passwordInput.focus();
            return false;
        } else {
            passwordInput.nextElementSibling.textContent = '';
        }

        return true;
    }
</script>





<style>
   @import url('https://fonts.googleapis.com/css?family=Montserrat:400,800');
:root {
    /*Customize colors*/
    --overlay-color: rgb(0, 140, 255);
    --button-color: rgb(17, 0, 255);
    --button-border-color: rgb(35, 187, 233);
    --overlay-gradiant1: rgb(0, 110, 220);
    --overlay-gradiant2: rgb(54, 17, 155);
}

* {
    box-sizing: border-box;
}

body {
    font-family: 'Montserrat', sans-serif;
    background-color: #f6f5f7;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 10px 0 50px;
}

h1 {
    font-weight: bold;
    margin: 0;
}

p {
    font-size: 14px;
    font-weight: 100;
    line-height: 20px;
    letter-spacing: 0.5px;
    margin: 20px 0 30px;
}

span {
    font-size: 12px;
}

a {
    color: #333;
    font-size: 14px;
    text-decoration: none;
    margin: 50px 0;
}

.container {
    background: white;
    border-radius: 10px;
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    position: relative;
    overflow: hidden;
    width: 768px;
    max-width: 100%;
    min-height: 480px;
}

.form-container form {
    background: white;
    display: flex;
    flex-direction: column;
    padding: 0 50px;
    height: 100%;
    justify-content: center;
    align-items: center;
    text-align: center;
}

.social-container {
    margin: 21px 0;
}

.social-container a {
    border: 1px solid #ddd;
    border-radius: 50%;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    margin: 0 5px;
    height: 40px;
    width: 40px;
}

.form-container input {
    background: #eee;
    border: none;
    padding: 12px 15px;
    margin: 8px 0;
    width: 100%;
    border-radius: 5px;
}

.form-container input:focus {
    outline: none;
}

button {
    border-radius: 20px;
    border: 1px solid var(--button-border-color);
    background: var(--button-color);
    color: white;
    font-size: 12px;
    font-weight: bold;
    padding: 12px 15px;
    letter-spacing: 1px;
    text-transform: uppercase;
    transition: transform 80ms ease-in;
}

button:active {
    transform: scale(0.95);
}

button:focus {
    outline: none;
}

button.ghost {
    background: transparent;
    border-color: white;
}

.form-container {
    position: absolute;
    top: 0;
    height: 100%;
    transition: all 0.6s ease-in-out;
}

.sign-in-container {
    left: 0;
    width: 50%;
    z-index: 2;
}

.sign-up-container {
    left: 0;
    width: 50%;
    z-index: 1;
    opacity: 0;
}

.overlay-container {
    position: absolute;
    top: 0;
    left: 50%;
    width: 50%;
    height: 100%;
    overflow: hidden;
    transition: transform 0.6s ease-in-out;
    z-index: 50;
}

.overlay {
    background: var(--overlay-color);
    background: linear-gradient(to right, var(--overlay-gradiant1), var(--overlay-gradiant2)) no-repeat 0 0 / cover;
    color: white;
    position: relative;
    left: -100%;
    height: 100%;
    width: 200%;
    transform: translateX(0);
    transition: transform 0.6s ease-in-out;
}

.overlay-panel {
    position: absolute;
    top: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 0 40px;
    height: 100%;
    width: 50%;
    text-align: center;
    transform: translateX(0);
    transition: transform 0.6s ease-in-out;

}

.overlay-right {
    right: 0;
    transform: translateX(0);
}

.overlay-left {
    transform: translateX(-20%);
}


/* Animation */

/* Move the signin to the right */
.container.right-panel-active .sign-in-container {
    transform: translateX(100%);
}

/*Move overlay to the left*/
.container.right-panel-active .overlay-container {
    transform: translateX(-100%);
}

/* Bring sign up over sign in*/
.container.right-panel-active .sign-up-container {
    transform: translateX(100%);
    opacity: 1;
    z-index: 5;
}

/* Move overlay back to the right*/

.container.right-panel-active .overlay {
    transform: translateX(50%);
}

.container.right-panel-active .overlay-left {
    transform: translateX(0);
}

.container.right-panel-active .overlay-right {
    transform: translateX(20%);
}
</style>

<script>
  const signUpButton = document.getElementById('signUp');
const signInButton = document.getElementById('signIn');
const container = document.getElementById('container');

signUpButton.addEventListener('click', () => container.classList.add('right-panel-active'));

signInButton.addEventListener('click', () => container.classList.remove('right-panel-active'));


//this is a challenge that was posted a while ago and I found a way arround it with somehelp from youtube; This is my code but not my idea.
</script>

</section>